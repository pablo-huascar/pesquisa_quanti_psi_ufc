---
title: "Explorando dados numéricos"
format: 
  revealjs:
      logo: img/brasao1_horizontal_cor_300dpi.png
      code-link: true
      code-tools: true
      code-line-numbers: false
      theme: simple
      echo: false
      message: false
      warning: false
progress: true
slide-number: true
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
#| include: false
source("C:/projetos-r/pesquisa-quanti-psi-ufc/_common.R")
```

```{r}
#| label: setup

## Analisar melhor o pacote conflicted e avaliar inserir em _common.R

library(tidyverse)
library(janitor)
library(UsingR)
library(carData)
library(palmerpenguins)
library(gt)
library(scales)
library(ggthemes)
library(conflicted)
conflicts_prefer(dplyr::filter())
conflicts_prefer(dplyr::select())
conflicts_prefer(dplyr::lag())
```

```{r}
#| label: data

father.son <- father.son |> 
  as_tibble()  

mtcars <- mtcars |> 
  as_tibble()

airquality <- airquality |> 
  as_tibble()

age_data <- read_csv("C:/projetos-r/pesquisa-quanti-psi-ufc/data/AgeDataset-V1.csv")

brasileiro <- read_csv("C:/projetos-r/pesquisa-quanti-psi-ufc/data/brasileiro_2014_2023.csv")
gols_brasileiro <- read_csv("C:/projetos-r/pesquisa-quanti-psi-ufc/data/gols_por_partida_2014_2023.csv")
```

## O que vamos aprender?

-   Explorar dados numéricos usando:
    -   Estatisticas descritivas e
    -   Gráficos

# Bancos de dados utilizados

## `father.son`

Conjunto de dados de Pearson sobre alturas de pais e filhos

-   Formato: Um banco de dados com 1078 observações e duas variáveis
    -   `fheighti`: altura do pai em polegadas
    -   `sheight`: altura do filho em polegadas

## Uma olhada em `father.son`

```{r}
#| label: tbl-pai-e-filho
#| tbl-cap: Uma amostra aleatória de dez casos do banco de dados `father.son`
#| tbl-cap-location: bottom

father.son |> 
  slice_sample(n = 10) |> 
  gt() |> 
  fmt_number(
    decimals = 1
  ) |> 
  cols_align(
    align = "center"  
  ) |> 
  tab_options(
    table.width = pct(100),
    table.font.size = "26px"
  ) |> 
  opt_stylize(
    style = 1, color = "gray"
    )
```

## `mtcars`

Os dados foram extraídos da revista Motor Trend US de 1974 e abrangem o consumo de combustível e 10 aspectos do design e desempenho de automóveis para 32 carros (modelos de 1973-74)

-   Formato: Um banco de dados com 234 observações e algumas variáveis. Vamos usar:
    -   `mpg`: milhas/galão (km/l)
    -   `wt`: peso (1000 lbs)
    -   `cyl`: número de cilindros

## Uma olhada em `mtcars`

```{r}
#| label: tbl-mtcars
#| tbl-cap: Uma amostra aleatória de dez casos do banco de dados `mtcars`
#| tbl-cap-location: bottom 

mtcars |> 
  select(wt, mpg) |> 
  slice_sample(n = 10) |> 
  gt() |> 
  fmt_number(
    decimals = 1
  ) |> 
  cols_align(
    align = "center"  
  ) |> 
  tab_options(
    table.width = pct(100),
    table.font.size = "26px"
  ) |> 
  opt_stylize(
    style = 1, color = "gray"
    )
```

## `diamonds`

Um conjunto de dados contendo os preços e outros atributos de quase 54.000 diamantes.

-   Formato: Um banco de dados com 53940 observações e algumas variáveis. Vamos usar:
    -   `price`: preço em dólares americanos
    -   `carat`: peso do diamante (quilates)

## Uma olhada em `diamonds`

```{r}
#| label: tbl-diamonds 
#| tbl-cap: Uma amostra aleatória de dez casos do banco de dados `diamonds `
#| tbl-cap-location: bottom 

diamonds |> 
  select(carat, price) |> 
  slice_sample(n = 10) |> 
  gt() |> 
  fmt_number(
    decimals = 1
  ) |> 
  cols_align(
    align = "center"  
  ) |> 
  tab_options(
    table.width = pct(100),
    table.font.size = "26px"
  ) |> 
  opt_stylize(
    style = 1, color = "gray"
    )
```

## `airquality` {.smaller}

Medições diárias da qualidade do ar em Nova York, de maio a setembro de 1973

-   Formato: Um banco de dados com 153 observações e seis variáveis
    -   `Ozone`: quantidade de ozônio (ppb - partes por bilhão)
    -   `Solar.R`: irradiaçao solar (lang - 1 lang é igual a um caloria por centímetro quadrado)
    -   `Wind`: velocidade do vento (mph - milhas por hora)
    -   `Temp`: temperatura (F - graus Fahrenheit)
    -   `Month`: mês da medição
    -   `Day`: dia da medição

## Uma olhada em `airquality`

```{r}
#| label: tbl-airquality
#| tbl-cap: Uma amostra dos dez primeiros casos do banco de dados `airquality`
#| tbl-cap-location: bottom 

airquality |> 
  slice(1:10) |> 
  gt() |> 
  fmt_number(
    decimals = 0
  ) |> 
  cols_align(
    align = "center"  
  ) |> 
  tab_options(
    table.width = pct(100),
    table.font.size = "26px"
  ) |> 
  opt_stylize(
    style = 1, color = "gray"
    )
```

## `Age dataset`

O conjunto de dados contém informações estruturadas sobre a vida, obra e morte de mais de 1 milhão de pessoas famosas falecidas.

-   Formato: Um banco de dados com 1.223.009 observações e algumas variáveis, por hora vamos usar:
    -   `Age of death`: idade com que a pessoa morrreu

## Uma olhada em `Age dataset`

```{r}
#| label: tbl-agedata
#| tbl-cap: Uma amostra aleatória de dez casos do banco de dados `Age dataset`
#| tbl-cap-location: bottom 

age_data |> 
  select(Name, `Age of death`) |> 
  slice_sample(n = 10) |> 
  gt() |> 
  cols_align(
    align = "center"  
  ) |> 
  tab_options(
    table.width = pct(100),
    table.font.size = "26px"
  ) |>
  opt_stylize(
    style = 1, color = "gray"
  )
```

# Gráficos de dispersão para dados pareados

## Gráficos de dispersão

::: panel-tabset

### Dados

```{r}
x <- c(1, 2, 3, 4, 5)
y <- 1 + 2*x
id <- letters[1:length(x)]
dispersao <- tibble(id, x, y)

dispersao |> 
  slice(1:6) |> 
  gt()|> 
  cols_align(
    align = "center"  
  ) |> 
  tab_options(
    table.width = pct(75), 
    table.font.size = "26px"
  ) |> 
  opt_stylize(
    style = 1, color = "gray"
    )
```

### Gráfico

```{r}
#| out-width: 70%

dispersao |> 
  ggplot(aes(x, y)) +
  geom_point(color = "red", size = 3) +
  geom_segment(x = x, xend = x, 
               y = (y-0.15), yend = 0,
               linetype = 2) +
  geom_segment(x = 0, xend = x-0.02,
               y = y, yend = y,
               linetype = 2) +
  scale_y_continuous(breaks = y)
```

:::

## Alturas dos pais X altura dos Filhos

-   Como você imagina que será a realação entre as auturas dos pais e dos filhos?
    -   Pais mais altos terão filhos mais altos ou mais baixos?
    -   E os pais mais baixos?
-   Tente fazer um desenho que represente essa relação

##  {#slide6-id data-menu-title="Gráfico de dispersão da relação entre as alturas dos pais e dos filhos"}

```{r}
#| label: scatter-plot-fheight-sheight

father.son |> 
  ggplot(aes(fheight, sheight)) +
  geom_jitter(alpha = 0.2, size = 3) +
  geom_smooth(method = "lm", se = F,
              color = "red", linetype = 2) +
  labs(
    title = "Gráfico de dispersão da relação\nentre as alturas dos pais e dos filhos"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5) 
  )
```

## Peso dos carros X milhas/galão (Km/l)

-   Como você imagina que será a realação entre o peso dos carros e o consumo de combustível, observando a razão milhas/galão (Km/l)?
    -   Carro mais pesados farão mais ou menos milhas/galão (Km/l)?
    -   E os carros mais leves?
-   Tente fazer um desenho que represente essa relação

##  {#slide9-id data-menu-title="Gráfico de diserpesão da relação entre peso e consumo de combustível"}

```{r}
#| label: scatter-plot-wt-mpg

mtcars |> 
  ggplot(aes(wt, mpg)) +
  geom_jitter(alpha = 0.2, size = 3) +
  geom_smooth(method = "lm", se = F,
              color = "red",linetype = 2) + 
  labs(
    title = "Gráfico de diserpesão da relação\nentre peso e consumo de combustível"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5) 
  )
```

## Quilate X Preço dos diamantes

-   Como você imagina que será a realação entre o quilate e o  preço dos diamantes?
    -   Diamantes com mais quilates serão mais ou menos caros?
    -   E os diamantes com menos quilates?
-   Tente fazer um desenho que represente essa relação

##  {#slide12-id data-menu-title="Gráfico de diserpesão da relação entre o quilate e o preço de diamantes"}

```{r}
#| label: scatter-plot-carat-price

diamonds |> 
  ggplot(aes(carat, price)) +
  geom_jitter(alpha = 0.2, size = 3) +
  geom_smooth(se = F, color = "red",
              linetype = 2) + 
  scale_x_log10() +
  labs(
    title = "Gráfico de diserpesão da relação\nentre o quilate e o preço de diamantes",
    caption = "Diamantes maiores são exponencialmente mais caros"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5),
    plot.caption = element_text(hjust = 0)
  )
```

## Relação entre o quilate e o preço de diamantes {.smaller}

-   Relação exponencial
    -   Uma variável depende da outra elevada a uma potência constante
    -   Crescimento ou decaimento rápido: a variável dependente aumenta ou diminui muito rapidamente à medida que a variável independente aumenta
    -   Gráfico em forma de curva: o gráfico de uma relação exponencial é uma curva suave que se aproxima de zero em um dos extremos e cresce ou decresce rapidamente no outro extremo.
    -   Não linearidade: a relação entre as variáveis não é linear, ou seja, não pode ser representada por uma linha reta.

## Relação entre o quilate e o preço de diamantes

-   Relação exponencial entre o peso e o preço de diamantes:
    -   Diamantes maiores são muito mais raros do que diamantes pequenos, o que aumenta seu preço drasticamente
    -   Diamantes maiores geralmente possuem maior qualidade e pureza, o que também contribui para seu preço elevado

# Gráficos de pontos e a média

## O centro dos dados

-   A média é uma maneira de medir o centro de uma distribuição de dados
-   Os gráficos de pontos mostram o valor exato para cada observação

##  {#slide19-id data-menu-title="Gráfico de pontos para temperatura de Nova York"}

```{r}
#| label: dot-plot-Temp

media <- mean(airquality$Temp)
media <- round(media, 2)

airquality |> 
  ggplot(aes(Temp)) +
  geom_dotplot(color = "gray", fill = "white", 
               dotsize = 0.7) +
  annotate("point", media, -0.05,
           color = "red", fill = "red", 
           shape = 24, size = 4) + 
  labs(
    title = "Gráfico de pontos para a temperatura de Nova York",
    subtitle = "Maio a setembro de 1973",
    caption =  "O triângulo vermelho indica a posição da média"
  ) +
  theme(
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.line.y = element_blank(),
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5),
    plot.caption = element_text(hjust = 0)
  )
```

## Como a média é calculada?

. . .

A fórmula da média: $$
    \bar{x} = \frac{\sum_{i=1}^n x_i}{n}
    $$

. . .

A formula da média em um formato um pouco mais simples: $$
    \bar{x} = \frac{x_1 + x_2 + \cdots + x_n}{n}
    $$

## Um pouco de nomenclaura

::: incremental
-   $\mu$: média da popualação
-   $\bar{x}$: média da amostra
-   $x$: qualquer caso da amostra
-   $x_i$: representa os valores individuais de forma genérica, onde $i$ é um índice que varia de $1$ (primeiro caso) até $n$ (último caso)
-   $n$: total de casos
:::

## {#slide36-id data-menu-title="O cáculo da média"}

Qual foi a média de temperatura dos cinco primeiros dias do mês de maio de 1973 em Nova York?

```{r}
#| label: tbl-cinco-dias-airquality
#| tbl-cap: Temperatura dos cinco primeiros dias do mês de maio de 1973 em Nova York
#| tbl-cap-location: bottom

airquality |> 
  filter(Month == 5, Day <= 5) |> 
  select(Month, Day, Temp) |> 
  gt() |> 
  fmt_number(
    decimals = 0
  ) |> 
  cols_align(
    align = "center"  
  ) |> 
  tab_options(
    table.width = pct(100), 
    table.font.size = "26px"
  ) |> 
  opt_stylize(
    style = 1, color = "gray"
    )
```

## O cáculo da média

$$
\text{Temp} = \{67, 72, 74, 62, 56\}
$$

. . .

$$
\bar{X} = \frac{67 + 72 + 74 + 62 + 56}{5}
$$

. . .

$$
\bar{X} = \frac{331}{5}
$$

. . .

$$
\bar{X} = 66.2
$$

## A média e a padronização de medidas

-   A média é útil porque nos permite redimensionar ou padronizar uma métrica em algo mais facilmente interpretável e comparável

## A média e a padronização de medidas

-   Um novo medicamento é mais eficaz no tratamento de crises de asma do que o medicamento padrão?
-   Um teste com 1.500 adultos foi delineado:
    -   500 receberam o novo medicamento
    -   1.000 receberam um medicamento padrão no grupo de controle

## Resultados

Qual medicamento é mais eficiente?

```{r}
#| label: tbl-asma
#| tbl-cap: Resultados do experimento sobre o novo remédio pra asma
#| tbl-cap-location: bottom

asma <- tribble(
  ~Droga, ~Pacientes, ~Ataques,
  "Nova", 500, 200,
  "Padrão", 1000, 300
) |> 
  mutate(
    "Ataques/paciente" = Ataques/Pacientes
  ) 

asma |>   
  gt() |> 
  cols_hide(
    columns = 4
  ) |> 
  cols_align(
    align = "center",   
  ) |> 
  tab_options(
    table.width = pct(100), 
    table.font.size = "26px"
  ) |> 
  opt_stylize(
    style = 1, color = "gray"
    )
```

## Resultados

::: incremental
-   Qual medicamento é mais eficiente?
    -   Ataques/paciente:
        -   Droga nova: $200/500 = 0.4$
        -   Medicamento padrão: $300/1000 = 0.3$
:::

. . .

```{r}
#| label: tbl-asma-medias
#| tbl-cap: Resultados do experimento sobre o novo remédio pra asma
#| tbl-cap-location: bottom
asma |>
  gt() |> 
  cols_align(
    align = "center",   
  ) |> 
  tab_options(
    table.width = pct(100), 
    table.font.size = "26px"
  ) |> 
  opt_stylize(
    style = 1, color = "gray"
    )
```

# Histogramas e a forma dos dados

## Histogramas e a forma dos dados {.smaller}

-   Os gráficos de pontos mostram o valor exato para cada observação
    -   Úteis para pequenos conjuntos de dados
    -   Difíceis de ler com amostras maiores

## Histogramas e a forma dos dados

-   Em vez de mostrar o valor de cada observação, vamos colocá-los em caixas ou grupos (bins) formados por intervalos
-   Variável `Temp` do banco de dados `airquality`:
    -   0-60, 60-65, 65-70...

## Histogramas e a forma dos dados

-   No slide a seguir, estão:
    -   A contagem de observações que estão em cada intervalo
    -   As contagens agrupadas são plotadas como barras no que é chamado de histograma

## Histogramas e a forma dos dados

::: panel-tabset
### Tabela

```{r}
#| label: tbl-bins-temp
#| tbl-cap: Contagens para os dados de temperatura agrupados
#| tbl-cap-location: bottom

cortes <- c(0 ,60 ,65 ,70 ,75 , 
            80 ,85 , 90, 95, 100) 

airquality <- airquality |> 
  mutate(
    bins = cut(Temp, breaks = cortes),
    destacar = case_when(bins == "(0,60]" ~ "menor",
                         bins == "(80,85]" ~ "maior",
                         .default = "outros")
  ) 

airquality |> 
  count(bins) |> 
  rename(
    "Contagem" = n
  ) |> 
  gt() |> 
  cols_align(
    align = "center"  
  ) |> 
  tab_options(
    table.width = pct(100),
    table.font.size = "22px"
  ) |> 
  opt_stylize(
    style = 1, color = "gray"
    )
```

### Histograma

```{r}
#| label: histogram-Temp
#| out-width: 70%

breaks_temp <- pretty(range(airquality$Temp), n = nclass.Sturges(airquality$Temp), min.n = 1)

airquality |> 
  ggplot(aes(Temp)) +
  geom_histogram(breaks = breaks_temp, fill = "white",
                 color = "gray") +
  scale_x_continuous(breaks = breaks_temp) +
  labs(
    title = "Histograma para a temperatura de Nova York",
    subtitle = "Maio a setembro de 1973"
    ) +
  theme(
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5)
  )
```
:::

## Histogramas e a forma dos dados

-   Os histogramas fornecem uma visão da densidade dos dados
    -   Barras mais altas representam onde os dados são relativamente mais comuns

## {#slide36-id data-menu-title="Histograma para a temperatura de Nova York"}

Houve mais dias com temperaturas entre 80°F e 85°F do que com temperaturas entre 0°F e 60°F

```{r}
#| label: histogram-Temp-color

airquality |> 
  ggplot(aes(Temp, fill = destacar,
             color = destacar)) +
  geom_histogram(breaks = breaks_temp) + 
  labs(
    title = "Histograma para a temperatura de Nova York",
    subtitle = "Maio a setembro de 1973",
    ) +
  scale_fill_manual(values = c(menor = "#6682F3", maior = "#EF7259", 
                               outros = "white")) +
  scale_color_manual(values = c(menor =  "#6682F3", maior = "#EF7259", 
                                outros = "gray")) +
  scale_x_continuous(breaks = breaks_temp) +
  theme(
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5),
    legend.position = "none"
  )
```

## Histogramas, gráficos de densidade e a forma dos dados {.smaller}

-   Histogramas e gráficos de densidade (um histograma suavizado) são convenientes para entender a forma da distribuição de dados:
    -   Quando a distribuição de uma variável segue para a direita e tem uma cauda direita mais longa: assimetria positiva
    -   Variáveis com a característica inversa – uma cauda longa e mais fina para a esquerda: assimetria negativa
    -   Variáveis que apresentam um declive aproximadamente igual em ambas as direções são chamadas simétricas

## Formas das distribuições {.smaller}

-   No slide a seguir, vamos ter as distribuições das seguintes variáveis
    -   Preço de diamantes (`price`, do banco de dados `diamonds`)
    -   Altura dos filhos (`sheight`, do banco de dados `father.son`)
    -   Idade da morte de pessoas famosas (`Age of death`, do banco de dados `Age dataset: life, work, and death of 1.22M people`[^1])
-   Como você imagina a forma dessas distribuições? Tente desenhá-las antes de ver os gráficos

[^1]: Mantivemos somente as mortes por causas naturais e de pessoas que faleceram com menos de 80 anos

## Formas das distribuições {.smaller}

::: panel-tabset
### Assimetria positiva

```{r}
#| out-width: 70%

diamonds |> 
  ggplot(aes(price)) +
  geom_histogram(aes(y = after_stat(density)),
                 breaks = pretty(range(diamonds$price),
                                 n = nclass.Sturges(diamonds$price),
                                 min.n = 1),
                 color = "gray", fill = "white") +
  geom_density(fill = "#5BBAF7", color = "gray", 
               alpha = 0.2) +
  labs(
    title = "Histograma do preço dos diamantes"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5)
    )
```

### Distribuição simétrica

```{r}
#| out-width: 70%

breaks_sheight <- pretty(range(father.son$sheight),
                         n = nclass.Sturges(father.son$sheight), 
                         min.n = 1)

father.son |> 
  ggplot(aes(sheight)) +
  geom_histogram(aes(y = after_stat(density)),
                 breaks = breaks_sheight,
                 color = "gray", fill = "white") +
  geom_density(fill = "#5BBAF7", color = "gray",
               alpha = 0.2) +
  labs(
    title = "Histograma da altura dos filhos"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5)
  )
```

### Assimetria negativa

```{r}
#| out-width: 70%

age_data_filter <- age_data |> 
  filter(`Manner of death` == "natural causes",
         `Age of death` < 80 ) 

age_data_filter |> 
  ggplot(aes(x = `Age of death`)) +
  geom_histogram(aes(y = after_stat(density)),
                 breaks = pretty(range(age_data_filter$`Age of death`),
                                 n = nclass.Sturges(age_data_filter$`Age of death`), 
                                 min.n = 1), 
                 color = "gray", fill = "white") +
geom_density(fill = "#5BBAF7", color = "gray",
               alpha = 0.2) +
  labs(
    title = "Histograma da idade falecimento de pessoas famosas",
    subtitle = "Causas naturais"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5)
  )
```
:::

## Histogramas e a moda

-   Além de verificar se uma distribuição é assimétrica ou simétrica, os histogramas podem ser usados para identificar a moda da distribuição
-   Uma moda é representada por um pico proeminente na distribuição

<<<<<<< HEAD:materiais_do_curso/slides/exploracao-dados-numericos/exploracao-dados-numericos.qmd

## 

Existe apenas um pico proeminente no histograma da altura dos filhos (`sheight`)
=======
## {#slide-id data-menu-title="Histograma para a altura dos filhos (intervalo da moda destacado"}

Existe apenas um pico proeminente no histograma da altura dos filhos (sheight)
>>>>>>> 4bdfe13857949e61d5ccd1dee1db255e84f78d04:materiais_do_curso/slides/exploracao-dados-numericos.qmd

```{r}
father.son |>
  mutate(
    pico = case_when(sheight > 68 & sheight < 70  ~ "pico",
                     .default = "não pico")
  ) |> 
  ggplot(aes(sheight, fill = pico,
             color = pico)) +
  geom_histogram(breaks = breaks_sheight) +
  labs(
    title = "Histograma da altura dos filhos",
    subtitle = "Moda destacada"
  ) +
  scale_fill_manual(values = c(pico = "#EF7259", 
                               "não pico" = "white")) +
  scale_color_manual(values = c("não pico" = "gray", pico = "gray")) +
  theme(
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5),
    legend.position = "none"
  )
```

## A moda

-   Definição matemática: valor com mais ocorrências no conjunto de dados
-   Para muitos conjuntos de dados do mundo real, é comum não haver observações com o mesmo valor, tornando esta definição impraticável na análise
-   As distribuições podem ser:
    -   unimodais 
    -   bimodais 
    -   multimodais

## A moda das distribuições {.smaller}

::: panel-tabset

### Unimodal

```{r}
#| out-width: 70%
father.son |>
  mutate(
    pico = case_when(sheight > 68 & sheight < 70  ~ "pico",
                     .default = "não pico")
  ) |> 
  ggplot(aes(sheight, fill = pico,
             color = pico)) +
  geom_histogram(breaks = breaks_sheight) +
  labs(
    title = "Histograma da altura dos filhos",
    subtitle = "Moda destacada"
  ) +
  scale_fill_manual(values = c(pico = "#EF7259", 
                               "não pico" = "white")) +
  scale_color_manual(values = c("não pico" = "gray", pico = "gray")) +
  theme(
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5),
    legend.position = "none"
  )
```

### Bimodal

```{r}
#| out-width: 70%
breaks_wind <- breaks_bill_length <- pretty(
  range(airquality$Wind),
  n = nclass.Sturges(airquality$Wind),
  min.n = 1
)

airquality <- airquality |> 
  mutate(
    pico = case_when((Wind > 6 & Wind <= 8) | (Wind  > 10 & Wind <= 12) ~ "pico",
                     .default = "não pico")
  )

airquality |> 
  ggplot(aes(Wind, fill = pico,
             color = pico)) +
  geom_histogram(breaks = breaks_wind) +
  labs(
    title = "Histograma do vento",
    subtitle = "Moda destacada"
  ) +
  scale_x_continuous(breaks = breaks_wind) +
  scale_fill_manual(values = c(pico = "#EF7259", 
                               "não pico" = "white")) +
  scale_color_manual(values = c("não pico" = "gray", pico = "gray")) +
  theme(
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5),
    legend.position = "none"
  )
```

:::

## A moda em sua definição matemática {.smaller}

::: panel-tabset

### Tabela

```{r}
#| label: tbl-moda-cyl
#| tbl-cap: Tabela de frequência do número de cilindros dos carros
#| tbl-cap-location: bottom

mtcars |> 
  count(cyl) |> 
  gt() |> 
  cols_align(
    align = "center"  
  ) |> 
  tab_options(
    table.width = pct(100),
    table.font.size = "22px"
  ) |> 
  tab_footnote(
    footnote = "Carros com 8 cilindros são mais frequentes"
  ) |> 
  opt_stylize(
    style = 1, color = "gray"
  )
```

### Gráfico de barras

```{r}
#| out-width: 60%
mtcars |> 
  mutate(
    cyl = as_factor(cyl)
  ) |> 
  ggplot(aes(cyl, fill = cyl,
             color = cyl)) +
  geom_bar() +
  theme(
    legend.position = "none"
  ) +
  scale_color_colorblind() +
  scale_fill_colorblind()
```
:::


# Exercícios

## Banco de dados `gols_do_brasileiro`

-   Formato: Um banco de dados com 3.799 observações e cinco variáveis
    -   `campeonato`: o ano do campeonato
    -   `partida`: sequência da partida no campeonato
    -   `data`: data de realização da partida
    -   `estádio`: estádio em que a partida foi realizada
    -   `gols`: número de gols da partida

## Uma olhada nos dados

```{r}
#| label: tbl-gols-do-brasileiro
#| tbl-cap: Uma amostra aleatória de dez casos do banco de dados `gols_do_brasileiro`
#| tbl-cap-location: bottom

gols_brasileiro |> 
  mutate(
    data = format(data, "%d-%m-%Y")
  ) |> 
  slice_sample(n = 10) |> 
  gt() |> 
  fmt_number(
    decimals = 0,sep_mark = ""
  ) |> 
  cols_align(
    align = "center"  
  ) |> 
  tab_options(
    table.width = pct(100),
    table.font.size = "22px"
  ) |> 
  opt_stylize(
    style = 1, color = "gray"
    )
```
