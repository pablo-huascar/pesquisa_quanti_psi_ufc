---
title: "Inferência para a média como estimador pontual"
format: 
  revealjs:
      logo: img/brasao1_horizontal_cor_300dpi.png
      code-link: true
      code-tools: true
      code-line-numbers: false
      theme: simple
      echo: false
      message: false
      warning: false
      css: logo.css
progress: true
slide-number: true
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
#| include: false
source("C:/projetos-r/pesquisa-quanti-psi-ufc/_common.R")
```

```{r}
#| label: setup

library(tidyverse)
library(janitor)
library(UsingR)
library(carData)
library(palmerpenguins)
library(gt)
library(scales)
library(ggthemes)
library(patchwork)
library(DT)
library(openintro)
library(ggridges)
library(latex2exp)
library(ggtext)
library(ggrepel)
conflicted::conflicts_prefer(dplyr::filter())
conflicted::conflicts_prefer(dplyr::select())
conflicted::conflicts_prefer(dplyr::lag())
conflicted::conflicts_prefer(dplyr::summarize)
conflicted::conflicts_prefer(dplyr::summarise)
conflicted::conflicts_prefer(scales::alpha)
conflicted::conflicts_prefer(scales::rescale)
```

## O que vamos aprender?

-   Estimadores pontuais
-   Distribuições amostrais
-   Erro padrão da média
-   Intervalos de confiança

# Bancos de dados utilizados

##  {background-image="img/pinguins.png" background-size="contain"}

## `penguins` {.smaller}

Medidas de tamanho para pinguins forrageadores adultos perto da Estação Palmer, Antártida. Inclui medidas para espécies de pinguins, ilha no Arquipélago Palmer, tamanho (comprimento da nadadeira, massa corporal, dimensões do bico) e sexo.

-   Formato: Um banco de dados com `r nrow(penguins)` observações e `r ncol(penguins)` variáveis
    -   `species`: espécies de pinguins (Adélie, Chinstrap e Gentoo)
    -   `island`: ilha no arquipélago de Palmer, Antártida (Biscoe, Dream ou Torgersen)
    -   `bill_length_mm`: comprimento do bico em milímetros
    -   `flipper_length_mm`: comprimento da nadadeira em milímetros
    -   `body_mass_g`: massa corporal em gramas
    -   `sex`: sexo do pinguin (macho ou fêmea)
    -   `year`: ano em que foi realizado o estudo

## Uma olhada em `penguins`

```{r}
#| label: tbl-penguins
#| tbl-cap: Uma amostra aleatória de dez casos do banco de dados `penguins`
#| tbl-cap-location: bottom
penguins |> 
  slice_sample(n = 10) |> 
  gt() |> 
  cols_align(
    align = "center"  
  ) |> 
  tab_options(
    table.width = pct(100),
  ) |> 
  opt_stylize(
    style = 1, color = "gray"
  )
```

## `diamonds`

Um conjunto de dados contendo os preços e outros atributos de quase 54.000 diamantes.

-   Formato: Um banco de dados com 53940 observações e algumas variáveis. Vamos usar:
    -   `price`: preço em dólares americanos
    -   `carat`: peso do diamante (quilates)

## Uma olhada em `diamonds`

```{r}
#| label: tbl-diamonds 
#| tbl-cap: Uma amostra aleatória de dez casos do banco de dados `diamonds `
#| tbl-cap-location: bottom 

diamonds |> 
  select(carat, price) |> 
  slice_sample(n = 10) |> 
  gt() |> 
  fmt_number(
    decimals = 1
  ) |> 
  cols_align(
    align = "center"  
  ) |> 
  tab_options(
    table.width = pct(100),
    table.font.size = "26px"
  ) |> 
  opt_stylize(
    style = 1, color = "gray"
    )
```

# Amostragem e estimadores pontuais

## A massa corporal dos pinguins {.smaller}

Para esta explicação, vamos imaginar que os `r nrow(penguins)` casos do banco de dados dos `penguins` correspondem a toda população de pinguins no arquipélogo Palmer.

```{r}
#| label: tbl-m-dp-massa-corporal
#| tbl-cap: "Média e desvio padrão da massa corporal (g) da população de pinguins"
#| tbl-cap-location: bottom
penguins |> 
  summarise(
    "\U03BC" = mean(body_mass_g, na.rm = TRUE),
    "\U03C3" = sd(body_mass_g, na.rm = TRUE)
  ) |> 
  pivot_longer(
    cols = everything(), names_to = "Parâmetro", 
    values_to = "Valor"
    ) |> 
  gt() |> 
  cols_align(
    align = "center"  
  ) |> 
  fmt_number(
    columns = 2, rows =  1, 
    decimals = 1, use_seps = F
    ) |> 
  tab_options(
    table.width = pct(100),
    table.font.size = "22px"
  ) |> 
  opt_stylize(
    style = 1, color = "gray"
  )
```

-   Parâmetro: medida numérica que descreve uma característica de uma população
    -   Valor fixo
    -   Dificilmente conhecido devido ao custo ou pela inviabilidade da coleta de dados
-   $\mu$: média da população
-   $\sigma$: desvio padrão da população

## 

```{r}
n_bmass_penguins <- sum(!is.na(penguins$body_mass_g))
mean_bmass_penguins <- mean(penguins$body_mass_g, na.rm = T)
mean_bmass_penguins <- round(mean_bmass_penguins, 1)
sd_bmass_penguins <- sd(penguins$body_mass_g, na.rm = T)
sd_bmass_penguins <- round(sd_bmass_penguins, 1)
range_bmass_penguins <- range(penguins$body_mass_g, na.rm = T)
nclass_bmass_penguins <- nclass.Sturges(penguins$body_mass_g)
breaks_bmass_penguins <- pretty(x = range_bmass_penguins,
                                n = nclass_bmass_penguins,
                                min.n = 1)
n_label <- str_c("n = ", n_bmass_penguins)
mean_label <- TeX(str_c("$\\mu$ = ", mean_bmass_penguins))
sd_label <- TeX(str_c("$\\sigma$ = ", sd_bmass_penguins))
  
penguins |> 
  ggplot(aes(body_mass_g)) +
  geom_histogram(breaks = breaks_bmass_penguins,
                 fill = "#569BBD",
                 color = "#FFFFFF") +
  geom_vline(xintercept = mean_bmass_penguins, 
             color = "#F05133", linetype = 2,
             linewidth = 1) +
  geom_text(label = n_label, x = 5900, y = 80) +
  geom_text(label = mean_label, x = 5900, y = 70) +
  geom_text(label = sd_label, x = 5900, y = 60) +
  labs(
    title = "Histograma da massa corporal da “população” de pinguins"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5)
  )
```

## Amostras da população de pinguins {.smaller}

Sempre haverá algum erro entre o valor da média da amostra ($\bar{x}$), um estimador pontual, e a média da população ($\mu$).

```{r}
#| label: tbl-amostras-bm
#| tbl-cap: Amostra e médias amostrais da massa corporal (g) dos pinguins
#| tbl-cap-location: bottom

body_mass_g <- penguins |> 
  drop_na(body_mass_g) |> 
  select(body_mass_g)

amostras_label <- str_c("Amostra ", 1:5)

amostras_body_mass_g <- map(1:5, \(x) slice_sample(body_mass_g, n = 5)) |> 
  list_cbind() |> 
  rename_with(~amostras_label)

amostras_body_mass_g |> 
  gt() |> 
  grand_summary_rows(
    columns = everything(), 
    fns = list(
      "x\U0305" = ~ mean(.),
      Erro = ~ (mean(.) - mean_bmass_penguins)
    ),
    fmt = ~ fmt_number(., decimals = 1, use_seps = F)
  ) |> 
  cols_align(
    align = "center"
  ) |> 
  tab_options(
    table.width = pct(100),
    table.font.size = "22px"
  ) |> 
  opt_stylize(
    style = 1, color = "gray"
    ) |> 
  tab_style(
    locations = list(cells_grand_summary(), cells_stub_grand_summary()),
    style = cell_fill(color = "gray" |> adjust_luminance(steps = +2))
  ) |> 
  tab_style(
    style = list(
      cell_text( align = "right")
    ),
    locations = cells_stub_grand_summary()
  ) |> tab_style(
    locations = list(cells_stub()),
    style = cell_fill(color = "white")
  )
```

## 

```{r}
amostras_bm_long <- amostras_body_mass_g |> 
  pivot_longer(
    cols = everything(), cols_vary = "slowest"
    )

amostras_bm_long |> 
  summarise(
    Média = mean(value),
    .by = name
  ) |> 
ggplot(aes(Média, name)) +
  geom_point(color = "#569BBD", size = 3) +
  geom_vline(xintercept = mean_bmass_penguins, 
             color = "#F05133", linetype = 2,
             linewidth = 1) +
  geom_text_repel(aes(label = Média)) +
  geom_text(label = mean_label, x = 4300, y = 5) +
  labs(
    y = NULL,
    x = "x\U0305",
    title = "Médias das amostras retiradas da \"população\" de pinguins"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5)
  )
```

## O que é um estimador pontual? {.smaller}

-   Um único valor que é calculado a partir de dados da amostra para estimar (fazer uma inferência sobre) um parâmetro populacional desconhecido
-   É o "melhor palpite" ou a "melhor estimativa" sobre o parâmetro populacional
-   Nunca são perfeitos: por ser baseado em uma amostra, o estimador pontual pode diferir do valor real do parâmetro populacional
    -   Sempre haverá um componente de erro no estimador pontual
-   Exemplos:
    -   $\bar{x}$: média da amostra
    -   $s$: desvio padrão da amostra

# Distribuição amostral

## O controle de qualidade dos salgadinhos Sobralitos {.smaller}

::: columns
::: {.column width="50%"}
::: {style="font-size: 70%"}
-   Os salgadinhos sobralitos devem ser vendidos em pacotes com peso médio de 300g e desvio padrão de 5g[^1]
-   A empresa que os fabrica precisa garantir este peso médio em cada lote de 10.000 pacotes
    -   Não pode pesar a mais para não dar prejuízo
    -   Não pode pesar a menos para não receber uma multa
-   Não há como pesar todos os pacotes, então são retiradas amostras de 30 pacotes para avaliação
-   A partir destas amostras, a empresa precisa fazer inferências sobre o todo o lote
-   Lembre-se: as inferências feitas a parir de amostras são, por definição, incompletas
    -   Sempre haverá algum erro
:::
:::

::: {.column width="50%"}
![](img/sobralitos.png){fig-align="center" width="378"}
:::
:::

[^1]: Em aplicações reais, dificilmente você vai ter acesso à média e ao desvio padrão da população, mas, para aprender as ideias básicas, vamos exemplificar com uma situação em que esses parâmetros são conhecidos.

## Amostra de sobralitos {.smaller}

```{r}
#| eval: false
set.seed(1014)
lote_sobralitos <- tibble(
  sobralitos = rnorm(n = 10000, mean = 300,
                     sd = 5)
  ) 

amostras_label <- str_c("Amostra ", 1:1000)

amostras_sobralitos <- map(1:1000, \(x) slice_sample(lote_sobralitos, n = 30)) |> 
  list_cbind() |> 
  rename_with(~amostras_label)

amostras_sobralitos |> 
  write_csv("./data/sobralitos.csv")
```

```{r}
amostras_sobralitos <- read_csv("C:/projetos-r/pesquisa-quanti-psi-ufc/data/sobralitos.csv")
```

```{r}
n_amostra1_sobralitos <- length(amostras_sobralitos$`Amostra 1`)
mean_amostra1_sobralitos <- mean(amostras_sobralitos$`Amostra 1`)
mean_amostra1_sobralitos <- round(mean_amostra1_sobralitos, 2)
sd_amostra1_sobralitos <- sd(amostras_sobralitos$`Amostra 1`)
sd_amostra1_sobralitos <- round(sd_amostra1_sobralitos, 2)
```

::: columns
::: {.column width="50%"}
-   O alvo da empresa é um peso de 300g
-   A média da amostra foi $\bar{x}$ = `r mean_amostra1_sobralitos`
-   Como se trata de uma amostra, não esperamos que a média seja extamente igual a 300
-   `r mean_amostra1_sobralitos` é perto o suficiente da nossa meta para ser acetiável?
-   A resposta é sim! Mas como determinar isso?
    -   Vamos retirar várias amostras e falar sobre teoria estatística
:::

::: {.column width="50%"}
```{r}
label_n_sobralitos <- str_c("n = ", n_amostra1_sobralitos)
label_mean_sobralitos <- TeX(str_c("$\\bar{x}$ = ", mean_amostra1_sobralitos))
label_sd_sobralitos <- TeX(str_c("$\\s$ = ", sd_amostra1_sobralitos))



amostras_sobralitos |> 
  ggplot(aes(`Amostra 1`)) +
  geom_histogram(bins = 5, 
                 fill = "#569BBD", color = "#FFFFFF") +
  geom_vline(xintercept = mean_amostra1_sobralitos, 
             color = "#F05133", linetype = 2,
             linewidth = 1) +
  geom_text(label = label_n_sobralitos, 
            x = 305, y = 10) +
  geom_text(label = label_mean_sobralitos,
            x = 305, y = 9) +
  geom_text(label = label_sd_sobralitos,
            x = 305, y = 8) +
  labs(
    title = "Histogram de uma amostra de sobralitos"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5)
  )
```
:::
:::

##  {.smaller}

-   Vamos pegar 100 amostras, cada uma com 30 pacotes, de um lote de sobralitos
-   Em seguida, vamos calcular a média de cada uma delas
-   Com os valores das 100 médias, vamos gerar um histograma
-   Esse histograma tem um formato conhecido?

```{r}
amostras_sobralitos_100 <- amostras_sobralitos |> 
  select(1:100) |> 
  summarise(
    across(everything(), mean)
  ) |> 
  pivot_longer(cols = everything(), 
               names_to = "Amostra", 
               values_to = "Média") 
```

```{r}
range_100_sobralitos <- range(amostras_sobralitos_100$Média)
nclass_100_sobralitos <- nclass.Sturges(amostras_sobralitos_100$Média)
breaks_100_sobralitos <- pretty(x = range_100_sobralitos,
                                n = nclass_100_sobralitos, min.n = 1)

p_sobralitos_100 <- amostras_sobralitos_100 |> 
  ggplot(aes(Média)) +
  geom_histogram(breaks = breaks_100_sobralitos, 
                 fill = "#569BBD", color = "#FFFFFF") +
  labs(
    title = "100 amostras de sobralitos",
    x = "Médias das amostras"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5)
  )

p_sobralitos_100
```

##  {.smaller}

-   Como ficaria a distribuição das médias de 500 amostras de sobralitos?

```{r}
amostras_sobralitos_500 <- amostras_sobralitos |> 
  select(1:500) |> 
  summarise(
    across(everything(), mean)
  ) |> 
  pivot_longer(cols = everything(), 
               names_to = "Amostra", 
               values_to = "Média")
```

```{r}
range_500_sobralitos <- range(amostras_sobralitos_500$Média)
nclass_500_sobralitos <- nclass.Sturges(amostras_sobralitos_500$Média)
breaks_500_sobralitos <- pretty(x = range_500_sobralitos,
                                n = nclass_500_sobralitos, min.n = 1)

p_sobralitos_500 <- amostras_sobralitos_500 |> 
  ggplot(aes(Média)) +
  geom_histogram(breaks = breaks_500_sobralitos, 
                 fill = "#569BBD", color = "#FFFFFF") +
  labs(
    title = "500 amostras de sobralitos",
    x = "Médias das amostras"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5)
  )

p_sobralitos_500
```

## 

E com 1000 amostras?

```{r}
amostras_sobralitos_1000 <- amostras_sobralitos |> 
  select(1:1000) |> 
  summarise(
    across(everything(), mean)
  ) |> 
  pivot_longer(cols = everything(), 
               names_to = "Amostra", 
               values_to = "Média") 
```

```{r}
range_1000_sobralitos <- range(amostras_sobralitos_1000$Média)
nclass_1000_sobralitos <- nclass.Sturges(amostras_sobralitos_1000$Média)
breaks_1000_sobralitos <- pretty(x = range_1000_sobralitos,
                                 n = nclass_1000_sobralitos, min.n = 1)

p_sobralitos_1000 <- amostras_sobralitos_1000 |> 
  ggplot(aes(Média)) +
  geom_histogram(breaks = breaks_1000_sobralitos, 
                 fill = "#569BBD", color = "#FFFFFF") +
  labs(
    title = "1000 amostras de sobralitos",
    x = "Médias das amostras"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5)
  )

p_sobralitos_1000
```

## Distriuição amostral das médias amostrais: $\bar{X}$ {.smaller}

::: columns
::: {.column width="50%"}
-   Quando se extraem muitas amostras aleatórias de uma população e se calcula a média para cada amostra, as médias dessas amostras formam uma distribuição conhecida como distribuição amostral da média: $\bar{X}$
:::

::: {.column width="50%"}
```{r}
p_sobralitos_1000
```
:::
:::

## Propriedades de $\bar{X}$ {.smaller}

-   Independentemente da forma da distribuição da população original, a distribuição amostral das médias amostrais tende a se aproximar de uma distribuição normal à medida que o tamanho da amostra aumenta, desde que as amostras sejam suficientemente grandes e independentes
-   À medida que o número de amostras aumenta, a média da $\bar{X}$ tende a se aproximar da média da população
-   O devio padrão $\bar{X}$ é o Erro Padrão

## Distribuição de $\bar{X}$ {.smaller}

::: panel-tabset
### Histograma da "população"[^2]

```{r}
#| out-width: 70%

breaks_diamonds_price <- pretty(range(diamonds$price),
                                n = nclass.Sturges(diamonds$price),
                                min.n = 1)

diamonds |> 
  ggplot(aes(price)) +
  geom_histogram(aes(y = after_stat(density)),
                 breaks = breaks_diamonds_price,
                 fill = "#569BBD",
                 color = "#FFFFFF") +
  labs(
    title = "Histograma do preço dos diamantes"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5)
  )
```

### $\bar{X}$

```{r}
#| eval: false

set.seed(1014)

amostras_label <- str_c("Amostra ", 1:1000)

diamonds_price <- diamonds |> 
  select(price)

amostras_price_diamonds <- map(1:1000, \(x) slice_sample(diamonds_price, n = 30)) |> 
  list_cbind() |> 
  rename_with(~amostras_label)

amostras_price_diamonds |> 
  write_csv("./data/amostras_price_diamonds.csv")
```

```{r}
#| out-width: 70%

amostras_price_diamonds <- read_csv("C:/projetos-r/pesquisa-quanti-psi-ufc/data/amostras_price_diamonds.csv")

amostras_price_diamonds |> 
  summarise(
    across(everything(), mean)
  ) |> 
  pivot_longer(cols = everything()) |>  
  ggplot(aes(value)) +
  geom_histogram(bins = 19,
    fill = "#569BBD", color = "#FFFFFF",) +
  labs(
    x = "Médias",
    title = "Histograma das médias de 1000 amostras dos preços dos diamantes*",
    caption = "*Cada amostra com 30 diamantes"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 12)
  )
```
:::

[^2]: Da mesma forma que fizemos com o banco de dados dos pinguins, vamos tratar os diamantes como uma "população".

## Média de $\bar{X}$

$$
E(\bar{X}_n) = \mu \quad \\ \text{à medida que } n \rightarrow \text{cresce}
$$ Onde, $$
E(\bar{X}_n) = \text{o valor esperado da média de} \ \bar{X} 
$$

$$
\mu = \text{a média da população}
$$

## Média de $\bar{X}$ {.smaller}

-   O valor esperado da média de $\bar{X}$ será, na melhor das hipóteses, uma estimativa de $\mu$
-   Teríamos que tirar todas as amostras concebíveis da população para igualar perfeitamente a média populacional
-   Mas, se fizermos isso, qual seria o propósito de amostrar, afinal?
-   O melhor que podemos fazer é encontrar uma estimativa intervalar para a média populacional $\mu$
-   Nossa estimativa intervalar será influenciada pelo tamanho da amostra e pelo grau de "confiança" com o qual estamos satisfeitos

## Erro padrão da média: o desvio padrão de $\bar{X}$ {.smaller}

::: columns
::: {.column width="50%"}

**Erro padrão da média**

$$\sigma_{\bar{x}} = \frac{\sigma}{\sqrt{n}}$$
$$\sigma_{\bar{x}} = \text{Erro padrão da média} $$  


$$\sigma = \text{desvio padrão da população}$$  

$$n = \text{tamanho da amostra}$$
:::
:::{.column width="50%"}
```{r}
amostras_sobralitos |> 
  select(1:30) |> 
  summarise(
    across(everything(), mean)
  ) |> 
  pivot_longer(cols = everything()) |>   
  ggplot(aes(value)) +
  geom_histogram(bins = 5, fill = "#569BBD", 
                 color = "#FFFFFF") +
  labs(
    x = "Médias das amostras",
    title = "30 amostras de sobralitos*",
    caption = "*Cada amostra com 30 pacotes"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5)
  )
```
:::
:::

## Erro padrão: controle de qualidade do sobralitos
::: columns
::: {.column width="50%"}

:::

::: {.column width="50%"}

:::

:::

## Distribuições amostrais

Em aplicações do mundo real, nunca observamos realmente um distribuição amostral, mas é útil sempre pensar em uma estimativa pontual como vinda de uma distribuição hipotética como esta. Entender a distribuição amostral nos ajudará a caracterizar e dar sentido às estimativas pontuais que observamos.

## 

## Intervalo de confiança
