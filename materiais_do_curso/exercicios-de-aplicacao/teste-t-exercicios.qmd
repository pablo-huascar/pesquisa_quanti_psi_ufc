---
title: "Teste T: exercícios"
lang: pt-br
format: 
  html:
     fig.retina: 2
     fig.width: 6
     fig.asp: 2/3
     fig-dpi: 300
     fig-align: center
     toc: true
echo: false
message: false
warning: false
eval: false
editor: visual
editor_options: 
  chunk_output_type: console
bibliography: exercios_exploracao.bib
reference-section-title: Referências
csl: apa.csl
---

```{r}
#| include: false
source("C:/projetos-r/pesquisa-quanti-psi-ufc/_common.R")
```

```{r}
library(tidyverse)
library(janitor)
library(rstatix)
library(tidymodels)
library(cowplot)
library(gapminder)
library(openintro)
conflicted::conflicts_prefer(dplyr::lag)
conflicted::conflicts_prefer(rstatix::t_test)
```

```{r}
df_mtcars <- mtcars |> 
  rownames_to_column(var = "modelo")
```

## Atividades

As atividades a seguir dizem respeito ao uso do teste t para amostras independentes. Antes de realizá-las, explore os dados gerando estatísticas descritivas e gráficos para variável dependente em cada grupo da variável independente. Em seguida, relate os resultados adequadamente.

### `mtcars`

O banco de dados `mtcars` (Motor Trend Car Road Tests) contém informações extraído da revista Motor Trend US de 1974 e compreende o consumo de combustível e 10 aspectos de design e desempenho de automóveis para 32 automóveis (modelos de 1973 a 1974). O livro de códigos é apresentado a seguir:

| Variável | Descrição                                    |
|:--------:|:---------------------------------------------|
|   mpg    | Consumo de combustível em Milhas/galão (EUA) |
|   cyl    | Número de cilindros                          |
|   disp   | Cilindradas (polegadas/cúbicas)              |
|    hp    | Potência bruta                               |
|   drat   | Relação do eixo traseiro                     |
|    wt    | peso (1000 libras)                           |
|   qsec   | 1/4 milha tempo                              |
|    vs    | Motor (0 = em forma de V, 1 = reto)          |
|    am    | Transmissão (0 = automática, 1 = manual)     |
|   gear   | Número de marchas à frente                   |
|   carb   | Número de carburadores                       |

: Livro de códigos para `mtcars`

```{r}
#| eval: false
mtcars |> 
  rownames_to_column(var = "Model") |> 
  write_csv("./data/mtcars.csv")
```

#### 1.Compare a média de consumo de combustível entre carros com motores em V e retos.

```{r}
df_mtcars |> 
  summarise(
    M = mean(mpg, na.rm = T),
    DP = sd(mpg, na.rm = T),
    .by = vs
  ) |> 
  mutate(
    across(c(M, DP), 
           \(x) round(x, 2))
  )
```

```{r}
df_mtcars |> 
  ggplot(aes(vs, mpg, group = as_factor(vs))) +
  geom_boxplot(color = "#569BBD") + 
  stat_boxplot(geom = 'errorbar', width = 0.1,
               color = "#569BBD")
```

```{r}
df_mtcars |>
  group_by(vs) |> 
  shapiro_test(mpg)

df_mtcars |> 
  levene_test(mpg ~ as_factor(vs))

df_mtcars |> 
  t_test(mpg ~ vs, var.equal = T, ref.group = "1")
```

#### 2. Há diferenças nas médias de consumo de combustível entre carros com transmissão automática e manual?

```{r}
df_mtcars |> 
  summarise(
    M = mean(mpg, na.rm = T),
    DP = sd(mpg, na.rm = T),
    .by = am
  ) |> 
  mutate(
    across(c(M, DP),
           \(x) round(x, 2))
  )
```

```{r}
df_mtcars |> 
  ggplot(aes(am, mpg, group = as_factor(am))) +
  geom_boxplot() +
  geom_jitter(alpha = 0.2, color = "red")
```

```{r}
df_mtcars |>
  group_by(am) |> 
  shapiro_test(mpg)

df_mtcars |> 
  levene_test(mpg ~ as_factor(am))

df_mtcars |> 
  t_test(mpg ~ am, var.equal = F, ref.group = "1")
```

### `ToothGrowth`: O efeito da vitamina C no crescimento dos dentes em porquinhos-da-índia

A resposta (VD) é o comprimento dos odontoblastos (células responsáveis pelo crescimento dos dentes) em 60 porquinhos-da-índia. Cada animal recebeu um dos três níveis de dose de vitamina C (0,5, 1 e 2 mg/dia) por um dos dois métodos de entrega, suco de laranja ou ácido ascórbico (uma forma de vitamina C e codificada como VC).

| Variável | Descrição                                                 |
|:--------:|-----------------------------------------------------------|
|   len    | Comprimento do dente                                      |
|   supp   | Tipo de suplemento (VC - Vitamina C; OJ - Suco de laranja |
|   dose   | Dose em miligramas/dia                                    |

: Livro de códigos para `Toothgrow`

```{r}
#| eval: false
ToothGrowth |> 
  write_csv("./data/toothgrowth.csv")
```

#### 3. Compare as médias de crescimento dos dentes entre os seguintes pares de doses: 0.5 e 1; 0.5 e 2 .

```{r}
ToothGrowth |> 
  filter(dose %in% c(0.5, 2)) |> 
  group_by(dose) |> 
  shapiro_test(len)
```

```{r}
mtcars <- mtcars |>
  tibble() |> 
  mutate(
    am = as_factor(am)
  )

mtcars |> 
  group_by(am) |> 
  summarise(
    m = mean(mpg)
  ) |> 
  mutate(
    diff = m - lag(m)
  )


mtcars |> 
  rstatix::t_test(mpg ~ am, ref.group = "1", var.equal = T,alternative = "two.sided")
```

```{r}
ci <- mtcars |> 
  specify(mpg ~ am) |> 
  hypothesise(null = "independence") |> 
  generate(reps = 1000, type = "bootstrap") |> 
  calculate(stat = "diff in means", order = c("0", "1")) |> 
  get_confidence_interval()
  

mtcars |> 
  specify(mpg ~ am) |> 
  hypothesise(null = "independence") |> 
  generate(reps = 1000, type = "bootstrap") |> 
  calculate(stat = "diff in means", order = c("0", "1")) |>
  visualise() +
  shade_confidence_interval(endpoints = ci) +
  shade_p_value(obs_stat = -7.24, direction = "less")
```

```{r}
iris |> 
  tibble() |> 
  group_by(Species) |> 
  summarise(
    across(where(is.double),
          \(x) mean(x, na.rm = T))
  )
  
```

```{r}
iris_t <- iris |> 
  tibble() |> 
  filter(Species %in% c("versicolor", "virginica")) |> 
  mutate(
    Species = fct_drop(Species)
  ) |> 
  select(Species, Sepal.Width) |> 
  clean_names()

iris_t |> 
  group_by(species) |> 
  summarise(
    m = mean(sepal_width)
  ) |> 
  mutate(
    diff = m - lag(m)
  )
  
  
```

```{r}

ci_iris <- iris_t |> 
  specify(sepal_width ~ species) |> 
  hypothesise(null = "independence") |> 
  generate(reps = 1000, type = "bootstrap") |> 
  calculate(stat = "diff in means", 
            order = c("virginica", "versicolor")) |> 
  get_ci()

iris_t |> 
  specify(sepal_width ~ species) |> 
  hypothesise(null = "independence") |> 
  generate(reps = 1000, type = "bootstrap") |> 
  calculate(stat = "diff in means", 
            order = c("virginica", "versicolor")) |> 
  get_p_value(obs_stat = -0.204, direction = "two sided")



iris_t |> 
  specify(sepal_width ~ species) |> 
  hypothesise(null = "independence") |> 
  generate(reps = 1000, type = "bootstrap") |> 
  calculate(stat = "diff in means", 
            order = c("virginica", "versicolor")) |> 
  visualise() +
  shade_p_value(obs_stat = 0.204, direction = "two sided")
  #shade_ci(endpoints = ci_iris)


```

```{r}
df <- read_csv("./data/assedio_contexto_saude.csv")

df |> 
  group_by(sexo) |> 
  summarise(
    m = mean(renda_mensal_familiar)
  ) |> 
  mutate(
    diff = m - lag(m)
  )

df |> 
  rstatix::t_test(renda_mensal_familiar ~ sexo, alternative = "two.sided")

df_teste <- df |> 
  select(sexo, renda_mensal_familiar)


point_estimat <- df_teste |> 
  specify(renda_mensal_familiar ~ sexo) |> 
  hypothesise(null = "independence") |> 
  calculate(stat = "t", order = c("Masculino", "Feminino"))
  
null_dist <- 
  df_teste |> 
  specify(renda_mensal_familiar ~ sexo) |> 
  hypothesise(null = "independence") |> generate(reps = 1000, type = "bootstrap") %>%
  calculate(stat = "t")


```
