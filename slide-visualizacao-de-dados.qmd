---
title: "Introdução ao R"
subtitle: "Visualização de dados"
format: 
  revealjs:
      logo: img/brasao1_horizontal_cor_300dpi.png
      code-link: true
      code-tools: true
      code-line-numbers: false
      theme: simple
      css: logo.css
progress: true
slide-number: true
editor: visual
editor_options: 
  chunk_output_type: console
fig-dpi: 300
---

```{r}
#| include: false
source("./_common.R")
```

```{r}
#| label: setup
#| include: false
library(tidyverse)
library(ggthemes)
library(palmerpenguins)
library(scales)
library(patchwork)
library(gt)
library(gapminder)
theme_set(theme_grey())
```

## Pacotes

Carregue os pacotes abaixo:

```{r}
#| eval: false
#| echo: true
library(tidyverse)
library(palmerpenguins)
```

# Bancos de dados utilizados

##  {background-image="img/pinguins.png" background-size="contain"}

## [`penguins`](https://allisonhorst.github.io/palmerpenguins/) {.smaller}

Medidas de tamanho para pinguins forrageadores adultos perto da Estação Palmer, Antártida. Inclui medidas para espécies de pinguins, ilha no Arquipélago Palmer, tamanho (comprimento da nadadeira, massa corporal, dimensões do bico) e sexo.

-   Formato: um banco de dados com `r nrow(penguins)` observações e `r ncol(penguins)` variáveis
    -   `species`: espécies de pinguins (Adélie, Chinstrap e Gentoo)
    -   `island`: ilha no arquipélago de Palmer, Antártida (Biscoe, Dream ou Torgersen)
    -   `bill_length_mm`: comprimento do bico em milímetros
    -   `flipper_length_mm`: comprimento da nadadeira em milímetros
    -   `body_mass_g`: massa corporal em gramas
    -   `sex`: sexo do pinguin (macho ou fêmea)
    -   `year`: ano em que foi realizado o estudo

## Uma olhada em `penguins`

```{r}
#| label: tbl-penguins
#| tbl-cap: Uma amostra aleatória de dez casos do banco de dados `penguins`
#| tbl-cap-location: bottom
penguins |> 
  slice_sample(n = 10) |> 
  gt() |> 
  cols_align(
    align = "center"  
  ) |> 
  tab_options(
    table.width = pct(100),
    table.font.size = "22px"
  ) |> 
  opt_stylize(
    style = 1, color = "gray"
  )
```

## `diamonds`

Um conjunto de dados contendo os preços e outros atributos de quase 54.000 diamantes.

-   Formato: Um banco de dados com 53940 observações e algumas variáveis. Vamos usar:
    -   `price`: preço em dólares americanos
    -   `carat`: peso do diamante (quilates)

## Uma olhada em `diamonds`

```{r}
#| label: tbl-diamonds 
#| tbl-cap: Uma amostra aleatória de dez casos do banco de dados `diamonds `
#| tbl-cap-location: bottom 
diamonds |> 
  select(carat, price) |> 
  slice_sample(n = 10) |> 
  gt() |> 
  fmt_number(
    decimals = 1
  ) |> 
  cols_align(
    align = "center"  
  ) |> 
  tab_options(
    table.width = pct(100),
    table.font.size = "26px"
  ) |> 
  opt_stylize(
    style = 1, color = "gray"
    )
```

## Introdução {.smaller}

-   [ggplot2](https://ggplot2.tidyverse.org/): grammar of graphics (gramática dos gráficos)
    -   [Sistema coerente para descrever e construir gráficos]{style="font-size:20pt;"}

::: panel-tabset
### `data`

```{r}
#| fig-align: center
#| out-width: 50%
library(ggplot2)
library(palmerpenguins)
penguins |> 
  ggplot()
```

### `mapping`

```{r}
#| fig-align: center
#| out-width: 50%
penguins |> 
  ggplot(
    aes(flipper_length_mm, 
        body_mass_g)
  )
```

### `geom_`

```{r}
#| fig-align: center
#| out-width: 50%
penguins |> 
  ggplot(
    aes(flipper_length_mm, 
        body_mass_g)
  ) +
  geom_point()
```
:::

## Primeiros Passos

::: incremental
-   Os pinguins com nadadeiras mais longas pesam mais ou menos que os pinguins com nadadeiras mais curtas?
-   Como é a relação entre o comprimento da nadadeira e a massa corporal? É positivo? Negativo? Linear? Não linear?
-   A relação varia de acordo com a espécie do pinguim?
-   O que nos diz a ilha onde mora o pinguim?
-   Vamos criar visualizações que podemos usar para responder a essas perguntas.
:::

## Objetivo final {transition="convex" transition-speed="slow"}

```{r}
#| out-width: 70%
#| fig-align: center
penguins |> 
  ggplot(
    aes(flipper_length_mm, 
        body_mass_g)) +
  geom_point(
    aes(color = species,
        shape = species
    )
  ) +
  geom_smooth(
    method = "lm"
  ) +
  labs(
    title = "Massa corporal e comprimento da nadadeira",
    subtitle = "Dimensões para Adelie, Chinstrap e Gentoo",
    x = "Comprimento da nadadeira (mm)",
    y = "Massa corporal (g)",
    color = "Espécie",
    shape = "Espécie"
  ) +
  scale_color_colorblind()
```

# Criando um [ggplot](https://ggplot2.tidyverse.org/reference/ggplot.html) camada por camada

## Banco de dados

`data`

```{r}
#| echo: true
#| out-width: 70%
#| fig-align: center
ggplot(
  data = penguins
  )
```

## Representação visual das informações

`mapping` e `aes`(aesthetics - estética)

```{r}
#| echo: true
#| fig-align: center
#| out-width: 70%
#| code-line-numbers: "|3|4|"
ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm, 
                y = body_mass_g)
)
```

## Como representar as informações?

-   **geom**: o objeto geométrico que um gráfico usa para representar dados
-   Funções que sempre começam com `geom_`
-   Gráficos de barras: [`geom_bar()`](https://ggplot2.tidyverse.org/reference/geom_bar.html)
-   Gráficos de linhas: [`geom_line()`](https://ggplot2.tidyverse.org/reference/geom_path.html)
-   Gráficos de caixa de bigodes: [`geom_boxplot()`](https://ggplot2.tidyverse.org/reference/geom_boxplot.html)
-   Gráficos de dispersão: [`geom_point()`](https://ggplot2.tidyverse.org/reference/geom_point.html)

## [`geom_point()`](https://ggplot2.tidyverse.org/reference/geom_point.html)

```{r}
#| echo: true
#| fig-align: center
#| out-width: 50%
#| code-line-numbers: "|6"
#| message: true
ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm,
                y = body_mass_g)
) +
  geom_point()
```

## Adicionando uma estética (aesthetics)

[`color`](https://ggplot2.tidyverse.org/reference/aes_colour_fill_alpha.html)

```{r}
#| echo: true
#| output-location: slide
#| fig-align: center
#| out-width: 70%
#| code-line-numbers: "|5"
ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm,
                y = body_mass_g, 
                color = species)
) +
  geom_point()
```

## Adicionando uma estética (aesthetics)

`shape`

```{r}
#| echo: true
#| output-location: slide
#| fig-align: center
#| out-width: 70% 
#| code-line-numbers: "|6"
ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm,
                y = body_mass_g, 
                color = species,
                shape = species)
) +
  geom_point()
```

## Adicionando uma camada (layer)

[`geom_smooth()`](https://ggplot2.tidyverse.org/reference/geom_smooth.html)

```{r}
#| echo: true
#| output-location: slide
#| fig-align: center
#| code-line-numbers: "|9|10|11|"
#| out-width: 70% 
ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm,
                y = body_mass_g, 
                color = species,
                shape = species)
) +
  geom_point() +
  geom_smooth(
    method = "lm"
  )
```

##  {#slide8-id data-menu-title="Objetivo Final"}

```{r}
#| fig-align: center
#| out-width: 70%
penguins |> 
  ggplot(
    aes(flipper_length_mm, 
        body_mass_g)
  ) +
  geom_point(
    aes(color = species,
        shape = species)
  ) +
  geom_smooth(
    method = "lm"
  ) +
  labs(
    title = "Massa corporal e comprimento da nadadeira",
    subtitle = "Dimensões para Adelie, Chinstrap e Gentoo",
    x = "Comprimento da nadadeira (mm)",
    y = "Massa corporal (g)",
    color = "Espécie",
    shape = "Espécie"
  ) +
  scale_color_colorblind()
```

## Adicionando uma camada (layer)

[`geom_smooth()`](https://ggplot2.tidyverse.org/reference/geom_smooth.html)

```{r}
#| echo: true
#| output-location: slide
#| fig-align: center
#| code-line-numbers: "|6|7|8"
#| out-width: 70%
ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm, 
                y = body_mass_g)
) +
  geom_point(
    aes(color = species,
        shape = species)
  ) +
  geom_smooth(
    method = "lm"
  )
```

## Adicionando rótulos (labels)

[`labs()`](https://ggplot2.tidyverse.org/reference/labs.html)

```{r}
#| echo: true
#| output-location: slide
#| fig-align: center
#| code-line-numbers: "|13|14|15|16|17|18|19|"
#| out-width: 70%
ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm, 
                y = body_mass_g)
) +
  geom_point(
    aes(color = species,
        shape = species)
  ) +
  geom_smooth(
    method = "lm"
  ) +
  labs(
    title = "Massa corporal e comprimento da nadadeira",
    subtitle = "Dimensões para Adelie, Chinstrap e Gentoo",
    x = "Comprimento da nadadeira (mm)",
    y = "Massa corporal (g)",
    color = "Espécie",
    shape = "Espécie"
  )
```

## Cores para daltônicos

[ggthemes](https://cran.r-project.org/package=ggthemes)

```{r}
#| label: cores-daltonicos-1
#| echo: true
#| eval: false
#| code-line-numbers: "|21|"
ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm,
                y = body_mass_g)
) +
  geom_point(
    aes(color = species,
        shape = species)
  ) +
  geom_smooth(
    method = "lm"
  ) +
  labs(
    title = "Massa corporal e comprimento da nadadeira",
    subtitle = "Dimensões para Adelie, Chinstrap e Gentoo",
    x = "Comprimento da nadadeira (mm)",
    y = "Massa corporal (g)",
    color = "Espécie",
    shape = "Espécie"
  ) +
  scale_color_colorblind()
```

## Cores para daltônicos {style="font-size:20pt;"}

[ggthemes](https://cran.r-project.org/package=ggthemes)

```{r}
#| label: cores-daltonicos-2
#| echo: false
#| fig-align: center
#| code-line-numbers: "|13"
#| out-width: 70%
ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm,
                y = body_mass_g)) +
  geom_point(aes(color = species,
                 shape = species)
  ) +
  geom_smooth(
    method = "lm"
  ) +
  labs(
    title = "Massa corporal e comprimento da nadadeira",
    subtitle = "Dimensões para Adelie, Chinstrap e Gentoo",
    x = "Comprimento da nadadeira (mm)",
    y = "Massa corporal (g)",
    color = "Espécie",
    shape = "Espécie"
  ) +
  scale_color_colorblind()
```

## Exercício

Qual o número de linhas no banco de dados dos `penguins`? Quantas colunas?

## Resposta

```{r}
#| echo: true
glimpse(penguins)
```

## Resposta

```{r}
#| echo: true
nrow(penguins)
ncol(penguins)
```

## Exercício

Faça um gráfico de dispersão de `bill_depth_mm` vs. `bill_length_mm`. Ou seja, faça um gráfico de dispersão com `bill_depth_mm` no eixo y e `bill_length_mm` no eixo x. Descreva a relação entre essas duas variáveis.

::: aside
bill = bico
:::

## Resposta

```{r}
#| echo: true
#| fig-align: center
#| out-width: 70%
#| output-location: slide
ggplot(
  data = penguins,
  aes(x = bill_length_mm,
      y = bill_depth_mm)
) +
  geom_point() +
  geom_smooth(
    method = "lm"
  )
```

## Exercício

O que acontece se você fizer um gráfico de dispersão de `species` versus `bill_depth_mm`? O que poderia ser uma melhor escolha de geom?

## Resposta

```{r}
#| echo: true
#| fig-align: center
#| out-width: 70%
ggplot(
  data = penguins,
  aes(x = species,
      y = bill_depth_mm)
) +
  geom_point()
```

## Resposta

```{r}
#| echo: true
#| fig-align: center
#| out-width: "70%"
ggplot(
  data = penguins,
  aes(x = species,
      y = bill_depth_mm)
) +
  geom_boxplot()
```

## Exercício

Recrie a seguinte visualização. Para qual estética o bill_depth_mm deve ser mapeado? E deve ser mapeado no nível global ou no nível do `geom`?

```{r}
#| fig-align: center
#| out-width: "70%"
ggplot(
  data = penguins,
  aes(x = flipper_length_mm,
      y = body_mass_g)
) +
  geom_point(
    aes(color = bill_depth_mm)
  ) +
  geom_smooth(
    method = "lm"
  )
```

## Resposta

```{r}
#| echo: true
#| fig-align: center
#| out-width: 70%
#| output-location: slide
#| code-line-numbers: "|7"
ggplot(
  data = penguins,
  aes(x = flipper_length_mm,
      y = body_mass_g)
) +
  geom_point(
    aes(color = bill_depth_mm)
  ) +
  geom_smooth(
    method = "lm"
  )
```

## Chamadas do ggplot2 {.smaller}

-   `data`
-   `mapping(aes(x = ... , y = ...)`

::: panel-tabset
### Código completo

```{r}
#| echo: true
#| eval: false
ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm,
                y = body_mass_g)
) +
  geom_point()
```

### Código com omissões

```{r}
#| echo: true
#| eval: false
ggplot(
  penguins,
  aes(flipper_length_mm,
      body_mass_g)
) +
  geom_point()
```

### Código usando pipe `|>`

```{r}
#| echo: true
#| output-location: slide
#| fig-align: center
#| out-width: "70%"
penguins |> 
  ggplot(
    aes(flipper_length_mm,
        body_mass_g)
  ) +
  geom_point()
```
:::

# Distribuições

## Visualizando distribuições

-   A visualização vai depender do tipo de variável
    -   Categórica
    -   Numérica

# Variável categórica

## Gráfico de Barras: `geom_bar()`

[Altura das barras: número de observações em cada valor de x]{style="font-size:20pt;"}

```{r}
#| echo: true
#| output-location: column-fragment
#| fig-align: center
#| out-width: "100%"
penguins |> 
  ggplot(
    aes(species)
  ) +
  geom_bar()
```

## Gráfico de Barras - `geom_bar()`: variáveis ordendas pela frequência (decrescente)

```{r}
#| echo: true
#| output-location: column-fragment
#| fig-align: center
#| out-width: "100%"
penguins |> 
  ggplot(
    aes(fct_infreq(species))
  ) +
  geom_bar()
```

## Gráfico de Barras - `geom_bar()`: variáveis ordendas pela frequência (crescente)

```{r}
#| echo: true
#| output-location: column-fragment
#| fig-align: center
#| out-width: "100%"
penguins |> 
  ggplot(       
    aes(fct_infreq(species) |> fct_rev())
  ) +
  geom_bar()
```

## Gráfico de Barras - `geom_bar()`: proporções {.smaller}

::: panel-tabset
### Código para percentuais

```{r}
#| echo: true
#| eval: false
#| message: false
#| warning: false
library(scales)

penguins |> 
  ggplot(
  aes(fct_infreq(species),
      y = after_stat(count/sum(count)),
      fill = species)
) +
  geom_bar() +
  geom_text(
    aes(label = percent(after_stat(count/sum(count)))),
    stat = "count",
    nudge_y = 0.02
  ) +
  theme(
    legend.position = "none"
  ) +
  scale_y_continuous(
    labels = percent
  ) +
  scale_fill_colorblind() +
  labs(
    x = "Espécies", y = NULL
  )
```

### Gráfico com percentuais

```{r}
#| fig-align: center
#| out-width: "50%"
penguins |> 
  ggplot(
  aes(fct_infreq(species),
      y = after_stat(count/sum(count)),
      fill = species)
) +
  geom_bar() +
  geom_text(
    aes(label = percent(after_stat(count/sum(count)))),
    stat = "count",
    nudge_y = 0.02
  ) +
  theme(
    legend.position = "none"
  ) +
  scale_y_continuous(
    labels = percent
  ) +
  scale_fill_colorblind() +
  labs(
    x = "Espécies", y = NULL
  )
```
:::

## Gráfico de Barras - `geom_bar()`: proporções {.smaller}

::: panel-tabset
### Código com Eixo y de 0 a 100

```{r}
#| echo: true
#| eval: false
#| fig-align: center
#| out-width: "50%"
penguins |> 
  ggplot(
    aes(fct_infreq(species),
        y = after_stat(count/sum(count)),
        fill = species)
  ) +
  geom_bar() +
  geom_text(
    aes(label = percent(after_stat(count/sum(count)))),
    stat = "count",
    nudge_y = 0.03
  ) +
  theme(
    legend.position = "none"
  ) +
  scale_y_continuous(
    labels = percent, limits = c(0, 1)
  ) +
  scale_fill_colorblind() +
  labs(
    x = "Espécies",
    y = NULL
  )
```

### Gráfico com eixo y de 0 a 100

```{r}
#| fig-align: center
#| out-width: "50%"
penguins |> 
  ggplot(
    aes(fct_infreq(species),
        y = after_stat(count/sum(count)),
        fill = species)
  ) +
  geom_bar() +
  geom_text(
    aes(label = percent(after_stat(count/sum(count)))),
    stat = "count",
    nudge_y = 0.03
  ) +
  theme(
    legend.position = "none"
  ) +
  scale_y_continuous(
    labels = percent, limits = c(0, 1)
  ) +
  scale_fill_colorblind() +
  labs(
    x = "Espécies",
    y = NULL
  )
```
:::

# Variável numérica

## Histograma: `geom_histogram()`

-   Divide o eixo x em caixas igualmente espaçadas
-   Usa a altura de uma barra para exibir o número de observações em cada caixa

```{r}
#| echo: true
#| fig-align: center
#| out-width: 100%
#| output-location: column-fragment
penguins |> 
  ggplot( 
    aes(body_mass_g)
  ) +
  geom_histogram(
    binwidth = 200,
    color = "white"
  )
```

## Histograma -`geom_histogram()`: `binwidth()` {.smaller}

-   Define a largura dos intervalos

::: panel-tabset
## `binwidth(20)`

```{r}
#| echo: true
#| output-location: column
#| out-width: 100%
penguins |> 
  ggplot(
    aes(x = body_mass_g)) +
  geom_histogram(
    binwidth = 20
  )
```

## `binwidth(2000)`

```{r}
#| echo: true
#| output-location: column
#| out-width: 70%
penguins |> 
  ggplot(
    aes(body_mass_g)) +
  geom_histogram(
    binwidth = 2000
  )
```
:::

## Exercícios

Faça um gráfico de barras das espécies (`species`) de pinguins, onde você atribui espécies (`species`) ao eixo y. Como esse gráfico é diferente?

## Resposta

```{r}
#| echo: true
#| output-location: slide
#| fig-align: center
#| out-width: 70%
penguins |> 
  ggplot(
    aes(y = species)) +
  geom_bar()
```

## Exercícios

Faça um histograma da variável quilate (`carat`) no conjunto de dados de `diamonds` (diamantes) Experimente diferentes larguras de caixa (`bin`). Qual largura de `bin` revela os padrões mais interessantes?

## Resposta

::: panel-tabset
## `bin` padrão: 30

```{r}
#| echo: true
#| fig-align: center
#| out-width: 45%
diamonds |> 
  ggplot(
    aes(carat)) +
  geom_histogram()
```

## `bin`: 100

```{r}
#| echo: true
#| fig-align: center
#| out-width: 45%
diamonds |> 
  ggplot(
    aes(carat)) +
  geom_histogram(
    bins =  100
  )
```
:::

# Relacionamentos entre variáveis

## Visualizando relacionamentos

-   2 variáveis
    -   categórica x numérica
    -   categórica x categórica
    -   numérica x numérica
-   3 ou mais variáveis

## Variáveis numéricas e categóricas

-   Diagrama de caixa: `geom_boxplot()`
    -   Atalho visual para medidas de posição (percentis) que descrevem uma distribuição
    -   Útil para identificar possíveis outliers

## `geom_boxplot()`

```{r}
#| echo: true
#| fig-align: center
#| out-width: 45%
penguins |>
  filter(species == "Chinstrap") |> 
  ggplot(
    aes(species, body_mass_g)
  ) +
  geom_boxplot()
```

## Duas variáveis categóricas

-   Relacionamento entre ilha (`island`) e espécie (`species`)
    -   Distribuição das espécies dentro de cada ilha

## Tabela de Frequência

```{r}
penguins |> 
  count(island,species) |>
  pivot_wider(
    names_from = species,
    values_from = n
    ) |>
  rowwise() |> 
  mutate(
    total_island = sum(c_across(Adelie:Chinstrap),na.rm = T)
    ) |> 
  ungroup()
```

## Gráfico de barras emplilhados (stacked bar plots)

```{r}
#| echo: true
#| output-location: slide
#| fig-align: center
#| out-width: "60%"
penguins |> 
  ggplot(
    aes(island, fill = species)) +
  geom_bar()
```

## Gráfico de frequência relativa (relative frequency plot)

-   `position = "fill"`
-   Útil para comparar a distribuição de espécies nas ilhas
    -   Não é afetado pelo número desigual de pinguins nas ilhas

```{r}
#| echo: true
#| output-location: slide
#| fig-align: center
#| out-width: "60%"
penguins |> 
  ggplot(
    aes(island, fill = species))+
  geom_bar(
    position = "fill"
  )
```

## Grafico de barras

-   `position = "dodge"`

```{r}
#| echo: true
#| output-location: slide
#| fig-align: center
#| out-width: "70%"
penguins |> 
  ggplot(
    aes(island, fill = species)) +
  geom_bar(
    position = "dodge"
  )
```

## Duas variáveis numéricas

-   `geom_point()`
-   `geom_smooth()`

```{r}
#| echo: true
#| label: dispresao
#| fig-align: center
#| out-width: "70%"
#| output-location: slide
penguins |> 
  ggplot(       
    aes(flipper_length_mm, body_mass_g)) +
  geom_point() +
  geom_smooth(
    method = "lm"
  )
```

## Três ou mais variáveis {.smaller}

-   Podem ser mapeadas para diferntes estéticas (aesthetics)
-   `color` = espécies (`species`)
-   `shape` = ilhas (`island`)

```{r}
#| echo: true
#| fig-align: center
#| out-width: "70%"
#| output-location: slide
penguins |> 
  ggplot(
    aes(flipper_length_mm, body_mass_g)
  ) +
  geom_point(aes(color = species, shape = island))
```

## facets {.samller}

-   Muitas variáveis nas estéticas pode deixar o gráfico confuso
-   `facet_`

```{r}
#| echo: true
#| label: facets
#| fig-align: center
#| out-width: "70%"
#| output-location: slide
penguins |> 
  ggplot(
    aes(flipper_length_mm, body_mass_g)) +
  geom_point(
    aes(color = species, shape = species)
  ) +
  facet_wrap(~ island)
```

## Series temporais

-   `geom_line()`
-   `geom_point()`

```{r}
#| echo: true
#| output-location: slide
#| fig-align: center
#| out-width: 70%
gapminder |>
  summarise(
    lifeExpm = mean(lifeExp),
    .by = c(continent, year)
  ) |> 
  ggplot(
    aes(year, lifeExpm, color = continent)
  ) +
  geom_line() +
  geom_point() + 
  scale_color_colorblind()
```

## Exercícios

O banco de dados `mpg` que acompanha o pacote ggplot2 contém `r nrow(mpg)` observações coletadas pela Agência de Proteção Ambiental dos EUA em `r mpg |> distinct(model) |> nrow()` modelos de carros. Quais variáveis em mpg são categóricas? Quais variáveis são numéricas? (Dica: digite `?mpg` para ler a documentação do banco de dados.) Como você pode ver essas informações ao executar `mpg`?

## Reposta

```{r}
#| echo: true
glimpse(mpg)
```

## Exercícios

Faça um gráfico de dispersão de `hwy` vs. `displ` usando o banco de dados `mpg` Em seguida, mapeie uma terceira variável numérica para `color`, depois para `size`, então para `color` e `size` ao mesmo tempo, então para `shape.` Como essas estéticas se comportam de maneira diferente para variáveis categóricas e numéricas?

## Resposta

```{r}
#| echo: true
#| fig-align: center
#| output-location: slide
#| out-width: 70%
p <- mpg |> 
  ggplot(
    aes(hwy, displ)
  ) +
  geom_point() +
  geom_smooth(
    method = "lm", se = F
  )

p
```

## Resposta

```{r}
#| echo: true
#| fig-align: center
#| output-location: slide
#| out-width: 70%
p + geom_point(aes(color = cty))
```

## Resposta

```{r}
#| echo: true
#| fig-align: center
#| output-location: slide
#| out-width: 70%
p + geom_point(aes(size = cty))
```

## Resposta

```{r}
#| echo: true
#| fig-align: center
#| output-location: slide
#| out-width: 70%
p + geom_point(aes(color = cty, size = cty))
```

## Resposta

```{r}
#| echo: true
#| warning: true
#| error: true
p + geom_point(aes(shape = cty))
```

## Resposta

```{r}
#| echo: true
#| fig-align: center
#| output-location: slide
#| out-width: 70%
p + geom_point(aes(color = cty, size = cty,
                 shape = drv))
```

## Exercícios

O que acontece se você mapear a mesma variável para várias estéticas?

## Resposta

```{r}
#| echo: true
#| fig-align: center
#| output-location: slide
#| out-width: 70%
penguins |> 
  ggplot(
    aes(flipper_length_mm, body_mass_g)) +
  geom_point(
    aes(color = sex, shape = sex)
  )
```

## Exercícios

Faça um gráfico de dispersão de bill_depth_mm vs. bill_length_mm. Você deve colorir os pontos por espécies. O que a adição de coloração por espécie revela sobre a relação entre essas duas variáveis? Que tal facetar por espécie?

## Resposta

```{r}
#| echo: true
#| fig-align: center
#| output-location: slide
#| out-width: 70%
penguins |> 
  ggplot(
    aes(bill_depth_mm, bill_length_mm)) +
  geom_point(
    aes(color = species)
  ) +
  geom_smooth(
    method = "lm", se = F
  )
```

## Resposta

```{r}
#| echo: true
#| fig-align: center
#| output-location: slide
#| out-width: 7-%
#| fig-dpi: 600
penguins |> 
  ggplot(       
    aes(bill_depth_mm, bill_length_mm)) +
  geom_point() +
  geom_smooth(
    method = "lm",
    se = F
  ) +
  facet_wrap(~ species)
```

# Salvando seus gráficos

## `ggsave()`

-   Gráficos ficam salvos no diretório de trabalho
    -   `getwd()`
-   É possível especificar `width` (largura) e `height` (altura)
-   `?ggsave()`

## Código

```{r}
#| echo: true
#| eval: false
histograma <- penguins |> 
  ggplot(
    aes(body_mass_g)) +
  geom_histogram(
  ) +
  theme_classic()

ggsave(filename = "histograma.png", dpi = 300)
```

## Resultado

![](histograma.png)
